!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/cat/learn/42/my_project/minitalk/rmakabe_minitalk/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(ARCHIVE)	Makefile	/^$(ARCHIVE):$/;"	t
$(CLIENT)	Makefile	/^$(CLIENT):$(OBJ_CLI)$/;"	t
$(NAME)	42_library/libftprintf/Makefile	/^$(NAME):$(OBJ)$/;"	t
$(NAME)	42_library/libftprintf/libft/Makefile	/^$(NAME):$(OBJ)$/;"	t
$(OBJ_DIR)%.o	42_library/libftprintf/Makefile	/^$(OBJ_DIR)%.o:$(SRC_DIR)%.c$/;"	t
$(OBJ_DIR)%.o	42_library/libftprintf/libft/Makefile	/^$(OBJ_DIR)%.o:$(SRC_DIR)%.c$/;"	t
$(OBJ_DIR_CLI)%.o	Makefile	/^$(OBJ_DIR_CLI)%.o:$(SRC_DIR_CLI)%.c$/;"	t
$(OBJ_DIR_SER)%.o	Makefile	/^$(OBJ_DIR_SER)%.o:$(SRC_DIR_SER)%.c$/;"	t
$(SERVER)	Makefile	/^$(SERVER):$(OBJ_SER)$/;"	t
AR	42_library/libftprintf/Makefile	/^AR := ar -rcs$/;"	m
AR	42_library/libftprintf/libft/Makefile	/^AR := ar -rcs$/;"	m
AR	Makefile	/^AR := ar -rcs$/;"	m
ARCHIVE	Makefile	/^ARCHIVE := $(addsuffix .a, $(subst $(LIB_DIR), $(ARCHIVE_DIR), $(LIB)))$/;"	m
ARCHIVE_DIR	42_library/libftprintf/Makefile	/^ARCHIVE_DIR := ..\/..\/archive\/$/;"	m
ARCHIVE_DIR	Makefile	/^ARCHIVE_DIR := archive\/$/;"	m
CC	42_library/libftprintf/Makefile	/^CC := cc$/;"	m
CC	42_library/libftprintf/libft/Makefile	/^CC := cc$/;"	m
CC	Makefile	/^CC := gcc$/;"	m
CFLAGS	42_library/libftprintf/Makefile	/^CFLAGS := -Wall -Wextra -Werror $(DEBUG) -I$/;"	m
CFLAGS	42_library/libftprintf/libft/Makefile	/^CFLAGS := -Wall -Wextra -Werror $(DEBUG) -I$/;"	m
CFLAGS	Makefile	/^CFLAGS := -Wall -Wextra -Werror $(DEBUG) $(SANITIZE) -I$/;"	m
CHAR_BIT_IS	include/server.h	/^#define CHAR_BIT_IS /;"	d
CLIENT	Makefile	/^CLIENT := client$/;"	m
CLIENT_H	include/client.h	/^# define CLIENT_H$/;"	d
DEBUG	42_library/Makefile	/^	DEBUG :=-O0 -g3$/;"	m
DEBUG	42_library/libftprintf/Makefile	/^	DEBUG := -O0 -g3$/;"	m
DEBUG	42_library/libftprintf/libft/Makefile	/^	DEBUG := -O0 -g3$/;"	m
DEBUG	Makefile	/^	DEBUG :=-O0 -g3$/;"	m
FT_PRINTF_H	include/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
INCLUDE	42_library/libftprintf/Makefile	/^INCLUDE := ..\/..\/include\/$/;"	m
INCLUDE	42_library/libftprintf/libft/Makefile	/^INCLUDE := ..\/..\/..\/include\/$/;"	m
INCLUDE	Makefile	/^INCLUDE := include\/$/;"	m
IS_ERROR	include/server.h	/^#define IS_ERROR /;"	d
LIB	Makefile	/^LIB := $(filter-out $(LIB_DIR)Makefile, $(wildcard $(LIB_DIR)*))$/;"	m
LIBFT	42_library/libftprintf/Makefile	/^LIBFT := $(LIBFT_DIR)libft.a$/;"	m
LIBFTPRINTF	42_library/Makefile	/^LIBFTPRINTF := libftprintf\/$/;"	m
LIBFT_DIR	42_library/libftprintf/Makefile	/^LIBFT_DIR := libft\/$/;"	m
LIBFT_H	include/libft.h	/^# define LIBFT_H$/;"	d
LIB_DIR	Makefile	/^LIB_DIR := 42_library\/$/;"	m
NAME	42_library/libftprintf/Makefile	/^NAME := $(ARCHIVE_DIR)libftprintf.a$/;"	m
NAME	42_library/libftprintf/libft/Makefile	/^NAME := libft.a$/;"	m
OBJ	42_library/libftprintf/Makefile	/^OBJ := $(addprefix $(OBJ_DIR), $(notdir $(SRC:.c=.o)))$/;"	m
OBJ	42_library/libftprintf/libft/Makefile	/^OBJ := $(addprefix $(OBJ_DIR), $(notdir $(SRC:.c=.o)))$/;"	m
OBJ_CLI	Makefile	/^OBJ_CLI := $(addprefix $(OBJ_DIR_CLI), $(notdir $(SRC_CLI:.c=.o)))$/;"	m
OBJ_DIR	42_library/libftprintf/Makefile	/^OBJ_DIR := obj\/$/;"	m
OBJ_DIR	42_library/libftprintf/libft/Makefile	/^OBJ_DIR := obj\/$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR := obj\/$/;"	m
OBJ_DIR_CLI	Makefile	/^OBJ_DIR_CLI := obj\/obj_client\/$/;"	m
OBJ_DIR_SER	Makefile	/^OBJ_DIR_SER := obj\/obj_server\/$/;"	m
OBJ_SER	Makefile	/^OBJ_SER := $(addprefix $(OBJ_DIR_SER), $(notdir $(SRC_SER:.c=.o)))$/;"	m
RECEIVE_CHAR	include/server.h	/^#define RECEIVE_CHAR /;"	d
RM	42_library/libftprintf/Makefile	/^RM := rm -rf$/;"	m
RM	42_library/libftprintf/libft/Makefile	/^RM := rm -rf$/;"	m
RM	Makefile	/^RM := rm -rf$/;"	m
SANITIZE	Makefile	/^SANITIZE :=-fsanitize=address$/;"	m
SERVER	Makefile	/^SERVER := server$/;"	m
SERVER_H	include/server.h	/^# define SERVER_H$/;"	d
SRC	42_library/libftprintf/Makefile	/^SRC := $(wildcard $(SRC_DIR)*.c)$/;"	m
SRC	42_library/libftprintf/libft/Makefile	/^SRC := $(wildcard $(SRC_DIR)*.c)$/;"	m
SRC_CLI	Makefile	/^SRC_CLI := $(wildcard $(SRC_DIR_CLI)*.c)$/;"	m
SRC_DIR	42_library/libftprintf/Makefile	/^SRC_DIR := src\/$/;"	m
SRC_DIR	42_library/libftprintf/libft/Makefile	/^SRC_DIR := src\/$/;"	m
SRC_DIR	Makefile	/^SRC_DIR := src\/$/;"	m
SRC_DIR_CLI	Makefile	/^SRC_DIR_CLI := src\/src_client\/$/;"	m
SRC_DIR_SER	Makefile	/^SRC_DIR_SER := src\/src_server\/$/;"	m
SRC_SER	Makefile	/^SRC_SER := $(wildcard $(SRC_DIR_SER)*.c)$/;"	m
all	42_library/Makefile	/^all:$/;"	t
all	42_library/libftprintf/Makefile	/^all: $(NAME)$/;"	t
all	42_library/libftprintf/libft/Makefile	/^all: $(NAME)$/;"	t
all	Makefile	/^all:$(CLIENT) $(SERVER)$/;"	t
char_2d_a_to_int_a	42_library/libftprintf/libft/src/char_a_to_int_a.c	/^int	*char_2d_a_to_int_a(int num, char **char_2d)$/;"	f	typeref:typename:int *
char_a_to_int_a	42_library/libftprintf/libft/src/char_a_to_int_a.c	/^int	*char_a_to_int_a(char *char_a, size_t *size)$/;"	f	typeref:typename:int *
check_and_conversion_strings	42_library/libftprintf/libft/src/ft_split.c	/^static size_t	check_and_conversion_strings(char *tmp_s, size_t len, char c)$/;"	f	typeref:typename:size_t	file:
check_needl	42_library/libftprintf/libft/src/ft_strnstr.c	/^static int	check_needl(const char *h, const char *n, size_t len)$/;"	f	typeref:typename:int	file:
check_pid_collect	src/src_client/main.c	/^static int	check_pid_collect (char *pid)$/;"	f	typeref:typename:int	file:
check_set	42_library/libftprintf/libft/src/ft_strtrim.c	/^static int	check_set(char c, const char *set)$/;"	f	typeref:typename:int	file:
check_set_back	42_library/libftprintf/libft/src/ft_strtrim.c	/^static int	check_set_back(char c, const char *set)$/;"	f	typeref:typename:int	file:
clean	42_library/Makefile	/^clean:$/;"	t
clean	42_library/libftprintf/Makefile	/^clean:$/;"	t
clean	42_library/libftprintf/libft/Makefile	/^clean:$/;"	t
clean	Makefile	/^clean:$/;"	t
content	include/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
debug	42_library/Makefile	/^debug:$/;"	t
debug	42_library/libftprintf/Makefile	/^debug:$/;"	t
debug	42_library/libftprintf/libft/Makefile	/^debug:$/;"	t
debug	Makefile	/^debug:$/;"	t
fclean	42_library/Makefile	/^fclean: clean$/;"	t
fclean	42_library/libftprintf/Makefile	/^fclean: clean$/;"	t
fclean	42_library/libftprintf/libft/Makefile	/^fclean: clean$/;"	t
fclean	Makefile	/^fclean: clean$/;"	t
free_2d_array	42_library/libftprintf/libft/src/ft_split.c	/^void	free_2d_array(char **re)$/;"	f	typeref:typename:void
ft_atoi	42_library/libftprintf/libft/src/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	f	typeref:typename:int
ft_bzero	42_library/libftprintf/libft/src/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_calloc	42_library/libftprintf/libft/src/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_isalnum	42_library/libftprintf/libft/src/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	42_library/libftprintf/libft/src/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	42_library/libftprintf/libft/src/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	42_library/libftprintf/libft/src/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	42_library/libftprintf/libft/src/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_isspace	42_library/libftprintf/libft/src/ft_atoi.c	/^static int	ft_isspace(int c)$/;"	f	typeref:typename:int	file:
ft_itoa	42_library/libftprintf/libft/src/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	42_library/libftprintf/libft/src/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	42_library/libftprintf/libft/src/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	42_library/libftprintf/libft/src/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	42_library/libftprintf/libft/src/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	42_library/libftprintf/libft/src/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	42_library/libftprintf/libft/src/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	42_library/libftprintf/libft/src/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	42_library/libftprintf/libft/src/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	42_library/libftprintf/libft/src/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	42_library/libftprintf/libft/src/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	42_library/libftprintf/libft/src/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	42_library/libftprintf/libft/src/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	42_library/libftprintf/libft/src/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	42_library/libftprintf/libft/src/ft_memset.c	/^void	*ft_memset(void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_printf	42_library/libftprintf/src/ft_printf.c	/^int	ft_printf(const char *fmt, ...)$/;"	f	typeref:typename:int
ft_putchar_fd	42_library/libftprintf/libft/src/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	42_library/libftprintf/libft/src/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	42_library/libftprintf/libft/src/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	42_library/libftprintf/libft/src/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_split	42_library/libftprintf/libft/src/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	42_library/libftprintf/libft/src/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strcmp	42_library/libftprintf/libft/src/ft_strcmp.c	/^int	ft_strcmp(char const *s1, char const *s2)$/;"	f	typeref:typename:int
ft_strdup	42_library/libftprintf/libft/src/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	typeref:typename:char *
ft_striteri	42_library/libftprintf/libft/src/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	typeref:typename:void
ft_strjoin	42_library/libftprintf/libft/src/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	42_library/libftprintf/libft/src/ft_strlcat.c	/^size_t	ft_strlcat(char *dest, const char *src, size_t n)$/;"	f	typeref:typename:size_t
ft_strlcpy	42_library/libftprintf/libft/src/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dest, const char *src, size_t n)$/;"	f	typeref:typename:size_t
ft_strlen	42_library/libftprintf/libft/src/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strmapi	42_library/libftprintf/libft/src/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	42_library/libftprintf/libft/src/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	42_library/libftprintf/libft/src/ft_strnstr.c	/^char	*ft_strnstr(const char *h, const char *n, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	42_library/libftprintf/libft/src/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	42_library/libftprintf/libft/src/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	42_library/libftprintf/libft/src/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	42_library/libftprintf/libft/src/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	42_library/libftprintf/libft/src/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
g_char_s	src/src_server/main.c	/^volatile sig_atomic_t	g_char_s = 0;$/;"	v	typeref:typename:volatile sig_atomic_t
g_sig_pid	src/src_client/main.c	/^volatile sig_atomic_t	g_sig_pid = 0;$/;"	v	typeref:typename:volatile sig_atomic_t
main	src/src_client/main.c	/^int	main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/src_server/main.c	/^int	main(void)$/;"	f	typeref:typename:int
next	include/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
norm	42_library/Makefile	/^norm:$/;"	t
norm	42_library/libftprintf/Makefile	/^norm:$/;"	t
norm	42_library/libftprintf/libft/Makefile	/^norm:$/;"	t
norm	Makefile	/^norm:$/;"	t
print_arg	42_library/libftprintf/src/ft_printf.c	/^static int	print_arg(va_list *ap, char type)$/;"	f	typeref:typename:int	file:
print_decimal	42_library/libftprintf/src/ft_printf_utils.c	/^int	print_decimal(long long num_int)$/;"	f	typeref:typename:int
print_hex	42_library/libftprintf/src/ft_printf_utils.c	/^int	print_hex(unsigned int num_hex, char letter)$/;"	f	typeref:typename:int
print_pointer	42_library/libftprintf/src/ft_printf_utils.c	/^int	print_pointer(size_t num_ptr)$/;"	f	typeref:typename:int
print_string	42_library/libftprintf/src/ft_printf_utils.c	/^int	print_string(va_list *ap, char type)$/;"	f	typeref:typename:int
print_while_fmt	42_library/libftprintf/src/ft_printf.c	/^static int	print_while_fmt(va_list *ap, const char *fmt)$/;"	f	typeref:typename:int	file:
put_in_strings	42_library/libftprintf/libft/src/ft_split.c	/^static int	put_in_strings(char *tmp_s, char **re, size_t num_strings)$/;"	f	typeref:typename:int	file:
put_recursive_itoa	42_library/libftprintf/libft/src/ft_itoa.c	/^static void	put_recursive_itoa(long long num, size_t string_size, char *re)$/;"	f	typeref:typename:void	file:
re	42_library/Makefile	/^re: fclean all$/;"	t
re	42_library/libftprintf/Makefile	/^re: fclean all$/;"	t
re	42_library/libftprintf/libft/Makefile	/^re: fclean all$/;"	t
re	Makefile	/^re: fclean all$/;"	t
recursive_putnbr	42_library/libftprintf/libft/src/ft_putnbr_fd.c	/^static void	recursive_putnbr(long long tmp_n, int fd)$/;"	f	typeref:typename:void	file:
remove_minus	42_library/libftprintf/libft/src/ft_itoa.c	/^static void	remove_minus(long long *tmp_n, int *np)$/;"	f	typeref:typename:void	file:
restore_char	src/src_server/main.c	/^static char	restore_char()$/;"	f	typeref:typename:char	file:
return_min	42_library/libftprintf/libft/src/ft_substr.c	/^static size_t	return_min(size_t remain, size_t len)$/;"	f	typeref:typename:size_t	file:
return_string_size	42_library/libftprintf/libft/src/ft_itoa.c	/^static size_t	return_string_size(long long num)$/;"	f	typeref:typename:size_t	file:
s_list	include/libft.h	/^typedef struct s_list$/;"	s
send_char	src/src_client/main.c	/^static int	send_char(int pid, char c)$/;"	f	typeref:typename:int	file:
send_error	src/src_client/main.c	/^static void	send_error(char *mes, int err)$/;"	f	typeref:typename:void	file:
send_error	src/src_server/main.c	/^static void	send_error(char *mes)$/;"	f	typeref:typename:void	file:
send_str	src/src_client/main.c	/^static int	send_str(int pid, char *str)$/;"	f	typeref:typename:int	file:
signal_handler	src/src_client/signal_handler.c	/^void	signal_handler(int signum, siginfo_t *info, void *dummy)$/;"	f	typeref:typename:void
signal_handler	src/src_server/signal_handler.c	/^void	signal_handler(int signum, siginfo_t *info, void *dummy)$/;"	f	typeref:typename:void
t_list	include/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
usage	src/src_client/usage.c	/^void	usage(void)$/;"	f	typeref:typename:void
write_receive_data	src/src_server/main.c	/^int	write_receive_data(void)$/;"	f	typeref:typename:int
